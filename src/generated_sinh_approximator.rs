
        // Generated by build.rs:generate_sinh_approximator

        
        fn pade_approximator_sinh_piece_0(f: f64) -> f64 {
            let f_min_a = f - 0;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                0 + 
                1 * f_min_a + 
                0 * f_min_a_sq + 
                0.11666666666666667 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0 * f_min_a + 
                -0.05 * f_min_a_sq;

            return nominator / denominator;
        }
        


        fn pade_approximator_sinh_piece_4598175219545276416(f: f64) -> f64 {
            let f_min_a = f - 0.25;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                0.2526123168081683 + 
                1.0249346968151531 * f_min_a + 
                0.08762096997633398 * f_min_a_sq + 
                0.11871192755317847 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0.02564563417285729 * f_min_a + 
                -0.04842972639547224 * f_min_a_sq;

            return nominator / denominator;
        }
        


        fn pade_approximator_sinh_piece_4602678819172646912(f: f64) -> f64 {
            let f_min_a = f - 0.5;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                0.5210953054937474 + 
                1.0989528506147763 * f_min_a + 
                0.17575818782038027 * f_min_a_sq + 
                0.12438808395951 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0.055024703330297756 * f_min_a + 
                -0.04364303512948186 * f_min_a_sq;

            return nominator / denominator;
        }
        


        fn pade_approximator_sinh_piece_4604930618986332160(f: f64) -> f64 {
            let f_min_a = f - 0.75;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                0.82231673193583 + 
                1.2197959692180411 * f_min_a + 
                0.26402855619716276 * f_min_a_sq + 
                0.13232455434759763 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0.09106869962685812 * f_min_a + 
                -0.03553945270918213 * f_min_a_sq;

            return nominator / denominator;
        }
        


        fn pade_approximator_sinh_piece_4607182418800017408(f: f64) -> f64 {
            let f_min_a = f - 1;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                1.1752011936438014 + 
                1.3846634938218858 * f_min_a + 
                0.35099563338344963 * f_min_a_sq + 
                0.14042178881343895 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0.1348000170950928 * f_min_a + 
                -0.024334273689410033 * f_min_a_sq;

            return nominator / denominator;
        }
        


        fn pade_approximator_sinh_piece_4608308318706860032(f: f64) -> f64 {
            let f_min_a = f - 1.25;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                1.6019190803008256 + 
                1.59321448468127 * f_min_a + 
                0.43546102910410645 * f_min_a_sq + 
                0.14651377088218198 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0.18428483442765933 * f_min_a + 
                -0.01091854746568439 * f_min_a_sq;

            return nominator / denominator;
        }
        


        fn pade_approximator_sinh_piece_4609434218613702656(f: f64) -> f64 {
            let f_min_a = f - 1.5;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                2.1292794550948173 + 
                1.8524968498763148 * f_min_a + 
                0.5190002260098588 * f_min_a_sq + 
                0.14946959710331248 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0.23478025121163387 * f_min_a + 
                0.0031277335936283606 * f_min_a_sq;

            return nominator / denominator;
        }
        


        fn pade_approximator_sinh_piece_4610560118520545280(f: f64) -> f64 {
            let f_min_a = f - 1.75;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                2.790414366277642 + 
                2.1809001720774583 * f_min_a + 
                0.6079608820074756 * f_min_a_sq + 
                0.1499999350556195 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0.2807067463229557 * f_min_a + 
                0.01606261611989847 * f_min_a_sq;

            return nominator / denominator;
        }
        


        fn pade_approximator_sinh_piece_4611686018427387904(f: f64) -> f64 {
            let f_min_a = f - 2;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                3.626860407847019 + 
                2.6082252060543794 * f_min_a + 
                0.7131714556656235 * f_min_a_sq + 
                0.1504302093691107 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0.318173393862234 * f_min_a + 
                0.026681981732379793 * f_min_a_sq;

            return nominator / denominator;
        }
        


        fn pade_approximator_sinh_piece_4612811918334230528(f: f64) -> f64 {
            let f_min_a = f - 2.5;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                6.0502044810397875 + 
                3.9210106632105783 * f_min_a + 
                1.026731919607922 * f_min_a_sq + 
                0.16261406851415333 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0.3654882778562018 * f_min_a + 
                0.04014899018491787 * f_min_a_sq;

            return nominator / denominator;
        }
        


        fn pade_approximator_sinh_piece_4613937818241073152(f: f64) -> f64 {
            let f_min_a = f - 3;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                10.017874927409903 + 
                6.194953234153758 * f_min_a + 
                1.5794775931443559 * f_min_a_sq + 
                0.2063833757680707 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0.38657986745551115 * f_min_a + 
                0.046167033697798135 * f_min_a_sq;

            return nominator / denominator;
        }
        


        fn pade_approximator_sinh_piece_4615063718147915776(f: f64) -> f64 {
            let f_min_a = f - 3.5;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                16.542627287634996 + 
                10.039195274599129 * f_min_a + 
                2.5290573233085705 * f_min_a_sq + 
                0.3000888625088072 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0.3949571783764863 * f_min_a + 
                0.04855938148957307 * f_min_a_sq;

            return nominator / denominator;
        }
        


        fn pade_approximator_sinh_piece_4616189618054758400(f: f64) -> f64 {
            let f_min_a = f - 4;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                27.28991719712775 + 
                16.443295335088077 * f_min_a + 
                4.122645826738955 * f_min_a_sq + 
                0.4697261223031544 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0.3981301014014046 * f_min_a + 
                0.04946576885962737 * f_min_a_sq;

            return nominator / denominator;
        }
        


        fn pade_approximator_sinh_piece_4616752568008179712(f: f64) -> f64 {
            let f_min_a = f - 4.5;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                45.003011151991785 + 
                27.043963943968976 * f_min_a + 
                6.768193220721868 * f_min_a_sq + 
                0.7591082995215732 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0.3993100849156338 * f_min_a + 
                0.04980288487960085 * f_min_a_sq;

            return nominator / denominator;
        }
        


        fn pade_approximator_sinh_piece_4617315517961601024(f: f64) -> f64 {
            let f_min_a = f - 5;
            let f_min_a_sq = f_min_a * f_min_a;
            let f_min_a_cu = f_min_a * f_min_a_sq;

            let numerator = 
                74.20321057778875 + 
                44.547517827772054 * f_min_a + 
                11.141254964852351 * f_min_a_sq + 
                1.2422196536379695 * f_min_a_cu;
            
            let denominator =
                1.0 + 
                -0.39974592023777783 * f_min_a + 
                0.049927406253043836 * f_min_a_sq;

            return nominator / denominator;
        }
        

        /// Approximates the sinh(F) function for F in the interval [0, 5).
        pub fn sinh_approx_lt5(f: f64) -> f64 {
        if f < 0.145 {
                return pade_approximator_sinh_piece_0(f);
            } else if f < 0.375 {
                return pade_approximator_sinh_piece_4598175219545276416(f);
            } else if f < 0.625 {
                return pade_approximator_sinh_piece_4602678819172646912(f);
            } else if f < 0.875 {
                return pade_approximator_sinh_piece_4604930618986332160(f);
            } else if f < 1.125 {
                return pade_approximator_sinh_piece_4607182418800017408(f);
            } else if f < 1.375 {
                return pade_approximator_sinh_piece_4608308318706860032(f);
            } else if f < 1.625 {
                return pade_approximator_sinh_piece_4609434218613702656(f);
            } else if f < 1.875 {
                return pade_approximator_sinh_piece_4610560118520545280(f);
            } else if f < 2.25 {
                return pade_approximator_sinh_piece_4611686018427387904(f);
            } else if f < 2.75 {
                return pade_approximator_sinh_piece_4612811918334230528(f);
            } else if f < 3.25 {
                return pade_approximator_sinh_piece_4613937818241073152(f);
            } else if f < 3.75 {
                return pade_approximator_sinh_piece_4615063718147915776(f);
            } else if f < 4.25 {
                return pade_approximator_sinh_piece_4616189618054758400(f);
            } else if f < 4.75 {
                return pade_approximator_sinh_piece_4616752568008179712(f);
            } else if f < 179769313486231570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 {
                return pade_approximator_sinh_piece_4617315517961601024(f);
            } else { unreachable!(); } }